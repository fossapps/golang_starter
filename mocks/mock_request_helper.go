// Code generated by MockGen. DO NOT EDIT.
// Source: crazy_nl_backend (interfaces: IRequestHelper)

// Package mocks is a generated GoMock package.
package mocks

import (
	adapters "crazy_nl_backend/adapters"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockIRequestHelper is a mock of IRequestHelper interface
type MockIRequestHelper struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestHelperMockRecorder
}

// MockIRequestHelperMockRecorder is the mock recorder for MockIRequestHelper
type MockIRequestHelperMockRecorder struct {
	mock *MockIRequestHelper
}

// NewMockIRequestHelper creates a new mock instance
func NewMockIRequestHelper(ctrl *gomock.Controller) *MockIRequestHelper {
	mock := &MockIRequestHelper{ctrl: ctrl}
	mock.recorder = &MockIRequestHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRequestHelper) EXPECT() *MockIRequestHelperMockRecorder {
	return m.recorder
}

// GetJwtData mocks base method
func (m *MockIRequestHelper) GetJwtData(arg0 *http.Request) (*adapters.Claims, error) {
	ret := m.ctrl.Call(m, "GetJwtData", arg0)
	ret0, _ := ret[0].(*adapters.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJwtData indicates an expected call of GetJwtData
func (mr *MockIRequestHelperMockRecorder) GetJwtData(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJwtData", reflect.TypeOf((*MockIRequestHelper)(nil).GetJwtData), arg0)
}

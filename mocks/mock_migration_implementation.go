// Code generated by MockGen. DO NOT EDIT.
// Source: starter/migrations (interfaces: IMigration)

// Package mocks is a generated GoMock package.
package mocks

import (
	mgo "github.com/globalsign/mgo"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	db "starter/db"
)

// MockIMigration is a mock of IMigration interface
type MockIMigration struct {
	ctrl     *gomock.Controller
	recorder *MockIMigrationMockRecorder
}

// MockIMigrationMockRecorder is the mock recorder for MockIMigration
type MockIMigrationMockRecorder struct {
	mock *MockIMigration
}

// NewMockIMigration creates a new mock instance
func NewMockIMigration(ctrl *gomock.Controller) *MockIMigration {
	mock := &MockIMigration{ctrl: ctrl}
	mock.recorder = &MockIMigrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIMigration) EXPECT() *MockIMigrationMockRecorder {
	return m.recorder
}

// Apply mocks base method
func (m *MockIMigration) Apply(arg0 db.Db) {
	m.ctrl.Call(m, "Apply", arg0)
}

// Apply indicates an expected call of Apply
func (mr *MockIMigrationMockRecorder) Apply(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockIMigration)(nil).Apply), arg0)
}

// GetDescription mocks base method
func (m *MockIMigration) GetDescription() string {
	ret := m.ctrl.Call(m, "GetDescription")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDescription indicates an expected call of GetDescription
func (mr *MockIMigrationMockRecorder) GetDescription() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDescription", reflect.TypeOf((*MockIMigration)(nil).GetDescription))
}

// GetKey mocks base method
func (m *MockIMigration) GetKey() string {
	ret := m.ctrl.Call(m, "GetKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetKey indicates an expected call of GetKey
func (mr *MockIMigrationMockRecorder) GetKey() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockIMigration)(nil).GetKey))
}

// Remove mocks base method
func (m *MockIMigration) Remove(arg0 *mgo.Database) {
	m.ctrl.Call(m, "Remove", arg0)
}

// Remove indicates an expected call of Remove
func (mr *MockIMigrationMockRecorder) Remove(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockIMigration)(nil).Remove), arg0)
}

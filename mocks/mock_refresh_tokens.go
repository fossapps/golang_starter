// Code generated by MockGen. DO NOT EDIT.
// Source: crazy_nl_backend/db (interfaces: IRefreshTokenManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	db "crazy_nl_backend/db"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIRefreshTokenManager is a mock of IRefreshTokenManager interface
type MockIRefreshTokenManager struct {
	ctrl     *gomock.Controller
	recorder *MockIRefreshTokenManagerMockRecorder
}

// MockIRefreshTokenManagerMockRecorder is the mock recorder for MockIRefreshTokenManager
type MockIRefreshTokenManagerMockRecorder struct {
	mock *MockIRefreshTokenManager
}

// NewMockIRefreshTokenManager creates a new mock instance
func NewMockIRefreshTokenManager(ctrl *gomock.Controller) *MockIRefreshTokenManager {
	mock := &MockIRefreshTokenManager{ctrl: ctrl}
	mock.recorder = &MockIRefreshTokenManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRefreshTokenManager) EXPECT() *MockIRefreshTokenManagerMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockIRefreshTokenManager) Add(arg0, arg1 string) {
	m.ctrl.Call(m, "Add", arg0, arg1)
}

// Add indicates an expected call of Add
func (mr *MockIRefreshTokenManagerMockRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockIRefreshTokenManager)(nil).Add), arg0, arg1)
}

// FindOne mocks base method
func (m *MockIRefreshTokenManager) FindOne(arg0 string) *db.RefreshToken {
	ret := m.ctrl.Call(m, "FindOne", arg0)
	ret0, _ := ret[0].(*db.RefreshToken)
	return ret0
}

// FindOne indicates an expected call of FindOne
func (mr *MockIRefreshTokenManagerMockRecorder) FindOne(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockIRefreshTokenManager)(nil).FindOne), arg0)
}
